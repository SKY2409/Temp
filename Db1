UPDATE table1 t1
SET name = (SELECT t2.name FROM table2 t2 WHERE REGEXP_REPLACE(t1.email, '[^a-zA-Z0-9@.]', '') = REGEXP_REPLACE(t2.email, '[^a-zA-Z0-9@.]', ''))
WHERE EXISTS (
    SELECT 1 FROM table2 t2 WHERE REGEXP_REPLACE(t1.email, '[^a-zA-Z0-9@.]', '') = REGEXP_REPLACE(t2.email, '[^a-zA-Z0-9@.]', '')
);



SELECT * FROM table_name 
WHERE REGEXP_LIKE(email_column, 
  '^(?:"?[A-Za-z0-9.!#$%&''*+/=?^_`{|}~-]+"?|[A-Za-z0-9][A-Za-z0-9._%+-]*[A-Za-z0-9])@([A-Za-z0-9.-]+\.[A-Za-z]{2,})$'
);

<asp:TextBox ID="txtEmail" runat="server" />
<asp:RegularExpressionValidator 
    ID="revEmail" 
    ControlToValidate="txtEmail"
    ErrorMessage="Please enter a valid email."
    ValidationExpression="^(?:""?[A-Za-z0-9.!#$%&'*+/=?^_`{|}~-]+""?|[A-Za-z0-9][A-Za-z0-9._%+-]*[A-Za-z0-9])@([A-Za-z0-9.-]+\.[A-Za-z]{2,})$"
    runat="server" 
    Display="Dynamic" 
    ForeColor="Red" />

DECLARE
    CURSOR cur IS
        SELECT year_value, date_value FROM my_table;
    
    v_year   NUMBER;
    v_date   NUMBER;
    v_june_30_date DATE;
    v_date_converted DATE;
BEGIN
    FOR rec IN cur LOOP
        v_year := rec.year_value;
        v_date := rec.date_value;

        v_date_converted := TO_DATE(v_date, 'YYYYMMDD');
        v_june_30_date := TO_DATE(v_year || '0630', 'YYYYMMDD');

        IF v_june_30_date BETWEEN v_date_converted - 365 AND v_date_converted + 365 THEN
            DBMS_OUTPUT.PUT_LINE('Row with year ' || v_year || ' and date ' || v_date || ': Within Â±1 year');
        ELSE
            DBMS_OUTPUT.PUT_LINE('Row with year ' || v_year || ' and date ' || v_date || ': Outside range');
        END IF;
    END LOOP;
END;


.......
SELECT *
FROM A
JOIN B ON <join_condition>
WHERE TO_DATE(B.date_col, 'YYYYMMDD') BETWEEN
      TO_DATE(A.year_col || '0630', 'YYYYMMDD')
      AND ADD_MONTHS(TO_DATE(A.year_col || '0630', 'YYYYMMDD'), 12) - 1;


.....
DECLARE
    v_year_value    NUMBER;
    v_raw_date      VARCHAR2(8);
    v_date_value    DATE;
    v_compare_date  DATE;
BEGIN
    -- Get the values from different tables (example: one record each)
    SELECT year_col INTO v_year_value FROM A WHERE <your_condition>;
    SELECT date_col INTO v_raw_date FROM B WHERE <your_condition>; -- assume CHAR or VARCHAR2

    -- Convert date
    v_date_value := TO_DATE(v_raw_date, 'YYYYMMDD');
    
    -- Construct June 30 of the year
    v_compare_date := TO_DATE(v_year_value || '0630', 'YYYYMMDD');

    -- Compare if v_date_value is in the 1-year range starting from June 30
    IF v_date_value BETWEEN v_compare_date AND ADD_MONTHS(v_compare_date, 12) - 1 THEN
        DBMS_OUTPUT.PUT_LINE('Date is within one year from June 30.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('Date is outside the one-year range.');
    END IF;
END;


' Determine the opposite profile type
Dim otherProfileType As String = If(PrepVerif.myRecType = "V", "P", "V")

' Query the comment from the other profile
Dim otherComment As String = ""
Dim conn As New OracleConnection("YOUR_CONNECTION_STRING") ' Adjust accordingly
Dim cmd As New OracleCommand("SELECT txtComment FROM YourTable WHERE ProfileID = :id AND ProfileType = :type", conn)

cmd.Parameters.Add(":id", OracleDbType.Int32).Value = PrepVerif.myProfileID ' Adjust this to match your profile's key
cmd.Parameters.Add(":type", OracleDbType.Varchar2).Value = otherProfileType

Try
    conn.Open()
    Dim reader As OracleDataReader = cmd.ExecuteReader()
    If reader.Read() Then
        otherComment = reader("txtComment").ToString()
    End If
    reader.Close()
Catch ex As Exception
    ' Log or handle error
Finally
    conn.Close()
End Try

' Example condition: only use other comment if current is empty and other has value
If String.IsNullOrWhiteSpace(PrepVerif.txtComment) AndAlso Not String.IsNullOrWhiteSpace(otherComment) Then
    PrepVerif.txtComment = otherComment
End If