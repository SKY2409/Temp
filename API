public class OptionService
{
    private readonly IConfiguration _config;

    public OptionService(IConfiguration config)
    {
        _config = config;
    }

    public async Task<List<TechOptionDto>> GetOptionsAsync()
    {
        var options = new List<TechOptionDto>();
        string connStr = _config.GetConnectionString("OracleDb");

        using var conn = new OracleConnection(connStr);
        await conn.OpenAsync();

        string sql = "SELECT TECH_NAME, TECH_GROUP FROM TECH_OPTIONS";
        using var cmd = new OracleCommand(sql, conn);
        using var reader = await cmd.ExecuteReaderAsync();

        while (await reader.ReadAsync())
        {
            options.Add(new TechOptionDto
            {
                Name = reader.GetString(0),
                Group = reader.GetString(1)
            });
        }

        return options;
    }
}




WebApi/Controllers/OptionsController.cs]

[ApiController]
[Route("api/[controller]")]
public class OptionsController : ControllerBase
{
    private readonly OptionService _optionService;

    public OptionsController(OptionService optionService)
    {
        _optionService = optionService;
    }

    [HttpGet]
    public async Task<ActionResult<List<TechOptionDto>>> Get()
    {
        return Ok(await _optionService.GetOptionsAsync());
    }
}




[WebApi/Models/TechOptionDto.cs
public class TechOptionDto
{
    public string Name { get; set; }
    public string Group { get; set; }
}


WebApi/Program.cs
builder.Services.AddScoped<OptionService>();
